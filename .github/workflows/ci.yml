name: CI

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            compiler: gcc
            version: 13
          - os: macos-latest
            compiler: clang
            version: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++-13 libspdlog-dev
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 100

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install cmake spdlog

    - name: Configure CMake
      run: |
        cmake -B build -S . \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_CXX_STANDARD=23

    - name: Build
      run: cmake --build build --config Release

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: kafka-binary-${{ matrix.os }}
        path: build/kafka
        retention-days: 7

  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install clang-format
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-format-15

    - name: Check formatting
      run: |
        find src -name '*.cpp' -o -name '*.hpp' | xargs clang-format-15 --dry-run --Werror || true
